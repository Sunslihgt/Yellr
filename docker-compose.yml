services:
  nginx:
    image: nginx:latest
    container_name: gateway
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - user-service
      - post-service
      - comment-service
      - frontend-service

  mongo:
    image: mongo:7
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db

  auth-service:
    build: 
      context: ./auth
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: auth-service
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    # Only for development
    volumes:
      - ./auth/src:/app/src
      - ./auth/package.json:/app/package.json
      - ./auth/package-lock.json:/app/package-lock.json
      - ./auth/tsconfig.json:/app/tsconfig.json
      - ./auth/.env:/app/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}

  user-service:
    build: 
      context: ./user
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: user-service
    restart: always
    ports:
      - "5001:5001"
    depends_on:
      - mongo
    # Only for development
    volumes:
      - ./user/src:/app/src
      - ./user/package.json:/app/package.json
      - ./user/package-lock.json:/app/package-lock.json
      - ./user/tsconfig.json:/app/tsconfig.json
      - ./user/.env:/app/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}

  post-service:
    build: 
      context: ./post
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: post-service
    restart: always
    ports:
      - "5002:5002"
    depends_on:
      - mongo
    # Only for development
    volumes:
      - ./post/src:/app/src
      - ./post/package.json:/app/package.json
      - ./post/package-lock.json:/app/package-lock.json
      - ./post/tsconfig.json:/app/tsconfig.json
      - ./post/.env:/app/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}

  comment-service:
    build: 
      context: ./comment
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: comment-service
    restart: always
    ports:
      - "5003:5003"
    depends_on:
      - mongo
    # Only for development
    volumes:
      - ./comment/src:/app/src
      - ./comment/package.json:/app/package.json
      - ./comment/package-lock.json:/app/package-lock.json
      - ./comment/tsconfig.json:/app/tsconfig.json
      - ./comment/.env:/app/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}

  frontend-service:
    build:
      context: ./frontend
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: frontend-service
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/tsconfig.json:/app/tsconfig.json
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - WATCHPACK_POLLING=true

volumes:
  mongo-data:
